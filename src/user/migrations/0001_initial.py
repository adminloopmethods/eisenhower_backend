# Generated by Django 4.2.2 on 2023-09-01 06:37

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import smart_selects.db_fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('location', '__first__'),
        ('configuration', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUsers',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(blank=True, max_length=100, null=True, verbose_name='Email Id')),
                ('mobile', models.CharField(blank=True, max_length=15, null=True)),
                ('mobile_with_isd', models.CharField(blank=True, max_length=20, null=True, verbose_name='Mobile No. with ISD Code')),
                ('isd', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(1)], verbose_name='ISD/Country Code')),
                ('access_status', models.CharField(choices=[('allow_to_all', 'allow'), ('self_only', 'self')], max_length=100)),
                ('registration_type', models.CharField(choices=[('android', 'Mobile/Android'), ('ios', 'Mobile/iOS'), ('web', 'Web')], max_length=255, verbose_name='Registration Type')),
                ('device_id', models.CharField(blank=True, max_length=255, null=True)),
                ('imei_no', models.CharField(blank=True, max_length=100, null=True)),
                ('device_name', models.CharField(blank=True, max_length=100, null=True)),
                ('code', models.CharField(blank=True, max_length=50, null=True, verbose_name='Customer Code')),
                ('designation', models.CharField(blank=True, max_length=100, null=True, verbose_name='Designation')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='user_profile_images/', verbose_name='User Profile Pic')),
                ('color_hex_code', models.CharField(blank=True, max_length=20, null=True)),
                ('is_cognito_user', models.BooleanField(default=False)),
                ('application_type', models.CharField(blank=True, choices=[('BCR', 'BCR'), ('BEM', 'BEM'), ('EISEN', 'Eisenhower')], max_length=200, null=True)),
                ('cognito_access_token', models.TextField(blank=True, null=True)),
                ('cognito_id_token', models.TextField(blank=True, null=True)),
                ('auth_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_auth', to=settings.AUTH_USER_MODEL)),
                ('city', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field='state', chained_model_field='state', db_column='city', limit_choices_to={'is_active': '1'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='city_%(class)ss', show_all=True, to='location.citymaster')),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='color_master_user', to='configuration.colormaster')),
                ('country', models.ForeignKey(blank=True, db_column='country', limit_choices_to={'is_active': '1'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='country_%(class)ss', to='location.countrymaster')),
                ('created_by', models.ForeignKey(blank=True, db_column='created_by', limit_choices_to=models.Q(('is_staff', 0), ('is_superuser', 0), _negated=True), null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='_departments_users', to='configuration.departments')),
                ('language', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='configuration.language')),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='_role_user', to='configuration.userrolemaster')),
                ('state', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field='country', chained_model_field='country', db_column='state', limit_choices_to={'is_active': '1'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='state_%(class)ss', show_all=True, to='location.statemaster')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', limit_choices_to=models.Q(('is_staff', 0), ('is_superuser', 0), _negated=True), null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': '     User Profile',
                'verbose_name_plural': '     User Profile',
                'db_table': 'user_profile',
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='UserTopicMapping',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_by', models.ForeignKey(blank=True, db_column='created_by', limit_choices_to=models.Q(('is_staff', 0), ('is_superuser', 0), _negated=True), null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('topics', models.ManyToManyField(to='configuration.topics')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', limit_choices_to=models.Q(('is_staff', 0), ('is_superuser', 0), _negated=True), null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='_custom_user_topics', to='user.customusers')),
            ],
            options={
                'verbose_name': '   User Topics',
                'verbose_name_plural': '   User Topics',
                'db_table': 'user_topic_mapping',
            },
        ),
        migrations.CreateModel(
            name='UserStickyNotes',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('note', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, db_column='created_by', limit_choices_to=models.Q(('is_staff', 0), ('is_superuser', 0), _negated=True), null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', limit_choices_to=models.Q(('is_staff', 0), ('is_superuser', 0), _negated=True), null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.customusers')),
            ],
            options={
                'verbose_name': '  Sticky Notes',
                'verbose_name_plural': '  Sticky Notes',
                'db_table': 'user_sticky_notes',
            },
        ),
        migrations.CreateModel(
            name='UserMemberMapping',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_by', models.ForeignKey(blank=True, db_column='created_by', limit_choices_to=models.Q(('is_staff', 0), ('is_superuser', 0), _negated=True), null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('members', models.ManyToManyField(to='user.customusers')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', limit_choices_to=models.Q(('is_staff', 0), ('is_superuser', 0), _negated=True), null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='custom_user_member', to='user.customusers')),
            ],
            options={
                'verbose_name': '    User members',
                'verbose_name_plural': '    User members',
                'db_table': 'user_member_mapping',
            },
        ),
        migrations.CreateModel(
            name='UserDepartmentMapping',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_by', models.ForeignKey(blank=True, db_column='created_by', limit_choices_to=models.Q(('is_staff', 0), ('is_superuser', 0), _negated=True), null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('departments', models.ManyToManyField(to='configuration.departments')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', limit_choices_to=models.Q(('is_staff', 0), ('is_superuser', 0), _negated=True), null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='_custom_user_department', to='user.customusers')),
            ],
            options={
                'verbose_name': '    User Departments',
                'verbose_name_plural': '    User Departments',
                'db_table': 'user_department_mapping',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('team_name', models.CharField(max_length=30, unique=True)),
                ('access_status', models.CharField(choices=[('allow_to_all', 'allow'), ('self_only', 'self')], max_length=100)),
                ('created_by', models.ForeignKey(blank=True, db_column='created_by', limit_choices_to=models.Q(('is_staff', 0), ('is_superuser', 0), _negated=True), null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='department_team_inst', to='configuration.departments')),
                ('members', models.ManyToManyField(to='user.customusers')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', limit_choices_to=models.Q(('is_staff', 0), ('is_superuser', 0), _negated=True), null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_user', to='user.customusers')),
            ],
            options={
                'verbose_name': 'Team',
                'verbose_name_plural': 'Team',
                'db_table': 'teams',
            },
        ),
    ]
